{"version":3,"file":"static/js/190.1f585e4b.chunk.js","mappings":"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","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/SignUpForm/SignUp.styled.js","components/SignUpForm/SignUp.jsx","page/RegistrationPage.styled.js","page/RegistrationPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const SectionWrapper = styled.section``;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SignupForm = styled.form`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    h3 {\n      color: var(--primery-color-black);\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 1.2;\n\n      margin-bottom: 16px;\n    }\n    label {\n      color: var(--primery-color-black);\n      font-size: 18px;\n      line-height: 1.3;\n\n      margin-bottom: 8px;\n    }\n    div {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 16px;\n    }\n    input {\n      display: flex;\n      padding: 12px 10px;\n      flex-direction: column;\n      justify-content: center;\n      align-items: flex-start;\n      gap: 10px;\n\n      border-radius: 6px;\n      background: var(--primery-color-white);\n\n      color: var(--primery-color-blue);\n      line-height: 1.2;\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    button {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      gap: 10px;\n      padding: 8px 30px;\n\n      border: none;\n      border-radius: 10px;\n      background: var(--primery-color-blue);\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n\n      color: var(--primery-color-white);\n      line-height: 1.2;\n      font-weight: 500;\n\n      margin-bottom: 16px;\n    }\n    button:active {\n      box-shadow: none;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    a {\n      color: var(--primery-color-blue);\n      font-size: 16px;\n      line-height: 1.2;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    button {\n      font-size: 18px;\n      padding: 10px 30px;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\nexport const ErrorMessage = styled.span`\n  @media screen and (min-width: 320px) {\n    color: var(--btn-color-red);\n    font-size: 14px;\n    line-height: 1.2;\n\n    margin-top: 8px;\n  }\n`;\n","import React from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport { SignupForm, ErrorMessage } from \"./SignUp.styled\";\n\nconst SignUpForm = () => {\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      repeatPassword: '',\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email('Invalid email address').required('Email is required'),\n      password: Yup.string().required('Password is required').min(8, 'Password must be at least 8 characters')\n  .max(20, 'Password must be at most 20 characters'),\n      repeatPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('Password is required'),\n    }),\n    onSubmit: values => {\n      console.log('Form data submitted:', values);\n    },\n  });\n\n  return (\n    <SignupForm onSubmit={formik.handleSubmit}>\n      <h3>Sign Up</h3>\n      <label>Enter your email</label>\n      <div>\n      <input\n        type=\"email\"\n        name=\"email\"\n        placeholder=\"E-mail\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n        style={{\n          border: formik.touched.email && formik.errors.email ? '1px solid var(--btn-color-red)' : '1px solid var(--primery-color-blue)',\n          color: formik.touched.email && formik.errors.email ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n        }}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <ErrorMessage>{formik.errors.email}</ErrorMessage>\n        ) : null}\n      </div>\n\n      <label>Enter your password</label>\n      <div>\n      <input\n        type=\"password\"\n        name=\"password\"\n        placeholder=\"Password\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.password}\n        style={{\n          border: formik.touched.password && formik.errors.password ? '1px solid var(--btn-color-red)' : '1px solid var(--primery-color-blue)',\n          color: formik.touched.password && formik.errors.password ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n        }}\n      />\n      {formik.touched.password && formik.errors.password ? (\n        <ErrorMessage>{formik.touched.password && formik.errors.password}</ErrorMessage>\n        ) : null}\n        </div>\n\n      <label>Repeat password</label>\n      <div>\n      <input\n        type=\"password\"\n        name=\"repeatPassword\"\n        placeholder=\"Repeat password\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.repeatPassword}\n        style={{\n          border: formik.touched.password && formik.errors.password ? '1px solid var(--btn-color-red)' : '1px solid var(--primery-color-blue)',\n          color: formik.touched.password && formik.errors.password ? 'var(--btn-color-red)' : 'var(--primery-color-blue)',\n        }}\n      />\n      {formik.touched.repeatPassword && formik.errors.repeatPassword ? (\n        <ErrorMessage>{formik.errors.repeatPassword}</ErrorMessage>\n        ) : null}\n        </div>\n\n      <button type=\"submit\">Sign Up</button>\n    <NavLink to=\"/signin\">Sign in</NavLink>\n  </SignupForm>\n  )\n};\n\nexport default SignUpForm;\n","import styled from 'styled-components';\nimport mobBackground from '../img/background-img-mobile.png';\nimport tabBackground from '../img/background-img-tablet.png';\nimport descBackground from '../img/background-img-desktop.png';\nexport const SignupPage = styled.section`\n  @media screen and (min-width: 320px) {\n    max-width: 280px;\n    padding: 0 20px;\n    margin: 0 auto;\n    height: 600px;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    margin: 0;\n    padding: 0 0 0 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n    margin: 0 auto;\n    padding: 60px 216px 0 840px;\n  }\n`;\n\nexport const SignupWrapper = styled.div`\n  @media screen and (max-width: 767px) {\n    background-image: url(${mobBackground});\n    background-repeat: no-repeat;\n    background-size: auto;\n    background-position: center top 27px;\n  }\n\n  @media screen and (min-width: 768px) {\n    position: relative;\n    &::before {\n      content: '';\n      position: absolute;\n      top: -107px;\n      bottom: 0px;\n      left: 0px;\n      right: 0px;\n      background-image: url(${tabBackground});\n      background-repeat: no-repeat;\n      background-size: auto;\n      z-index: -1;\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    &::before {\n      top: -126px;\n      background-image: url(${descBackground});\n      background-position: center;\n    }\n  }\n`;\n","import { Section } from 'components/Section/Section';\nimport SignUpForm from 'components/SignUpForm/SignUp';\nimport { SignupPage, SignupWrapper } from './RegistrationPage.styled';\n\nconst RegistrationPage = () => {\n  return (\n    <Section>\n      <SignupWrapper>\n        <SignupPage>\n          <SignUpForm />\n        </SignupPage>\n      </SignupWrapper>\n    </Section>\n  );\n};\n\nexport default RegistrationPage;\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","SignupForm","ErrorMessage","_templateObject2","formik","useFormik","initialValues","email","password","repeatPassword","validationSchema","Yup","required","min","max","oneOf","onSubmit","values","console","log","handleSubmit","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","style","border","touched","errors","color","NavLink","to","SignupPage","SignupWrapper","mobBackground","tabBackground","descBackground","SignUpForm"],"sourceRoot":""}