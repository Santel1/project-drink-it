{"version":3,"file":"static/js/453.22a9bd3a.chunk.js","mappings":"sLACaA,E,QAAiBC,QAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,Q,UCC/BC,EAAU,SAAHC,GAA6B,IAAvBC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC/B,OACEC,EAAAA,EAAAA,MAACR,EAAc,CAAAO,SAAA,EACbE,EAAAA,EAAAA,KAAA,MAAAF,SAAKD,IACJC,IAGP,C,iHCRaG,EAAYT,EAAAA,QAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,09F,8BC8DpC,EAzDkB,WAChB,IAAMQ,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KACJE,SAAS,qBACTD,MAAM,yBACTE,SAAUH,EAAAA,KAAaE,SAAS,yBAG5BE,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbL,MAAO,GACPE,SAAU,IAEZI,SAAU,SAAAC,GACRC,QAAQC,IAAI,WAAYF,EAC1B,EACAT,iBAAkBA,IAEpB,OACEH,EAAAA,EAAAA,MAACE,EAAS,CAACS,SAAUH,EAAOO,aAAahB,SAAA,EACvCE,EAAAA,EAAAA,KAAA,MAAAF,SAAI,aACJC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,sBACPE,EAAAA,EAAAA,KAAA,SACEe,KAAK,QACLC,YAAY,SACZC,KAAK,QACLC,MAAOX,EAAOI,OAAOP,MACrBe,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,cAEjBtB,EAAAA,EAAAA,KAAA,QAAAF,SACGS,EAAOgB,OAAOnB,OAASG,EAAOiB,QAAQpB,OAASG,EAAOgB,OAAOnB,YAGlEL,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEE,EAAAA,EAAAA,KAAA,SAAAF,SAAO,yBACPE,EAAAA,EAAAA,KAAA,SACEe,KAAK,WACLC,YAAY,WACZC,KAAK,WACLC,MAAOX,EAAOI,OAAOL,SACrBa,SAAUZ,EAAOa,aACjBC,OAAQd,EAAOe,cAEjBtB,EAAAA,EAAAA,KAAA,QAAAF,SACGS,EAAOgB,OAAOjB,UACbC,EAAOiB,QAAQlB,UACfC,EAAOgB,OAAOjB,eAGpBN,EAAAA,EAAAA,KAAA,UAAQe,KAAK,SAAQjB,SAAC,aACtBE,EAAAA,EAAAA,KAACyB,EAAAA,GAAO,CAACC,GAAG,UAAS5B,SAAC,cAG5B,E,uNCxDa6B,EAAenC,EAAAA,QAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,ogBAKdkC,EASAC,EAKAC,GCR5B,EAZkB,WAChB,OACE9B,EAAAA,EAAAA,KAAA+B,EAAAA,SAAA,CAAAjC,UACEE,EAAAA,EAAAA,KAACL,EAAAA,EAAO,CAAAG,UACNE,EAAAA,EAAAA,KAAC2B,EAAY,CAAA7B,UACXE,EAAAA,EAAAA,KAACgC,EAAS,SAKpB,C","sources":["components/Section/Section.styled.js","components/Section/Section.jsx","components/LogInForm/LogIn.styled.js","components/LogInForm/LogIn.jsx","page/LoginPage.styled.js","page/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const SectionWrapper = styled.section``;\n","import { SectionWrapper } from './Section.styled';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionWrapper>\n      <h2>{title}</h2>\n      {children}\n    </SectionWrapper>\n  );\n};\n","import styled from 'styled-components';\nexport const FormStyle = styled.form`\n  @media screen and (min-width: 320px) {\n    display: flex;\n    flex-direction: column;\n    max-width: 280px;\n    h3 {\n      margin: 0 0 16px 0;\n      font-family: 'Roboto', sans-serif;\n      font-size: 26px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 32px;\n      color: var(--primery-color-black);\n    }\n    div {\n      display: flex;\n      flex-direction: column;\n      margin-bottom: 16px;\n    }\n\n    label {\n      margin-bottom: 8px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 24px;\n      color: var(--primery-color-black);\n    }\n    input {\n      padding: 12px 10px;\n      font-family: 'Roboto', sans-serif;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n      color: var(--secondary-color-blue);\n      border-radius: 6px;\n      border: 1px solid var(--btn-color-light-blue);\n    }\n    input:focus {\n      color: var(--primery-color-blue);\n      outline: none;\n    }\n    input::placeholder {\n      color: var(--secondary-color-blue);\n    }\n    input:invalid {\n      outline: 1px solid var(--btn-color-red);\n      color: var(--btn-color-red);\n    }\n    span {\n      font-family: 'Roboto', sans-serif;\n      font-size: 14px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 18px;\n      color: var(--btn-color-red);\n      margin-top: 4px;\n    }\n    button {\n      cursor: pointer;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 20px;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n    button:hover,\n    button:focus {\n      box-shadow: 0px 4px 14px 0px rgba(64, 123, 255, 0.54);\n    }\n    button:active {\n      box-shadow: none;\n    }\n    a {\n      color: var(--primery-color-blue);\n      text-decoration: none;\n      font-size: 16px;\n      font-style: normal;\n      font-weight: 400;\n      line-height: 20px;\n    }\n    a:hover,\n    a:focus {\n      color: #ff9d43;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 336px;\n    button {\n      cursor: pointer;\n      font-size: 18px;\n      font-style: normal;\n      font-weight: 500;\n      line-height: 24px;\n      display: flex;\n      padding: 10px 30px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 10px;\n      box-shadow: 0px 4px 8px 0px rgba(64, 123, 255, 0.34);\n      background-color: var(--primery-color-blue);\n      border: none;\n      color: var(--primery-color-white);\n      margin-bottom: 16px;\n    }\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 384px;\n  }\n`;\n","import React from 'react';\nimport { useFormik } from 'formik';\nimport { FormStyle } from './LogIn.styled';\nimport * as Yup from 'yup';\nimport { NavLink } from 'react-router-dom';\n\nconst LogInForm = () => {\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Email is required')\n      .email('Invalid email address'),\n    password: Yup.string().required('Password is requird'),\n  });\n\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    onSubmit: values => {\n      console.log('onSubmit', values);\n    },\n    validationSchema: validationSchema,\n  });\n  return (\n    <FormStyle onSubmit={formik.handleSubmit}>\n      <h3>Sing In</h3>\n      <div>\n        <label>Enter your email</label>\n        <input\n          type=\"email\"\n          placeholder=\"E-mail\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <span>\n          {formik.errors.email && formik.touched.email && formik.errors.email}\n        </span>\n      </div>\n      <div>\n        <label>Enter your password</label>\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <span>\n          {formik.errors.password &&\n            formik.touched.password &&\n            formik.errors.password}\n        </span>\n      </div>\n      <button type=\"submit\">Sign In</button>\n      <NavLink to=\"/signup\">Sign up</NavLink>\n    </FormStyle>\n  );\n};\n\nexport default LogInForm;\n","import styled from 'styled-components';\nimport mobileImg from '../img/background-img-mobile.png';\nimport tabletImg from '../img/background-img-tablet.png';\nimport desktopImg from '../img/background-img-desktop.png';\n\nexport const LoginSection = styled.section`\n  @media screen and (min-width: 320px) {\n    max-width: 320px;\n    padding: 0 20px;\n    margin-top: 24px;\n    background-image: url(${mobileImg});\n    background-repeat: no-repeat;\n\n    height: 100vh;\n  }\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n    padding: 0 32px;\n    margin-top: 40px;\n    background-image: url(${tabletImg});\n  }\n  @media screen and (min-width: 1440px) {\n    max-width: 1440px;\n    padding: 0 112px;\n    background-image: url(${desktopImg});\n\n    margin-top: 140px;\n  }\n`;\n","import LogInForm from 'components/LogInForm/LogIn';\nimport { Section } from 'components/Section/Section';\nimport { LoginSection } from './LoginPage.styled';\n\nconst LogInPage = () => {\n  return (\n    <>\n      <Section>\n        <LoginSection>\n          <LogInForm />\n        </LoginSection>\n      </Section>\n    </>\n  );\n};\n\nexport default LogInPage;\n"],"names":["SectionWrapper","styled","_templateObject","_taggedTemplateLiteral","Section","_ref","title","children","_jsxs","_jsx","FormStyle","validationSchema","Yup","email","required","password","formik","useFormik","initialValues","onSubmit","values","console","log","handleSubmit","type","placeholder","name","value","onChange","handleChange","onBlur","handleBlur","errors","touched","NavLink","to","LoginSection","mobileImg","tabletImg","desktopImg","_Fragment","LogInForm"],"sourceRoot":""}